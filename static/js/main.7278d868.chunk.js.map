{"version":3,"sources":["utils.js","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["findTab","allTabs","selectId","find","id","Tabs","tabs","onTabSelected","selectedTabId","currentTab","className","map","tab","title","cn","onClick","href","content","initialTabId","App","useState","setSelectedTabId","selectTab","ReactDOM","render","document","getElementById"],"mappings":"uNAAaA,EAAU,SAACC,EAASC,GAAV,uBAAuBD,EAC3CE,MAAK,qBAAGC,KAAgBF,YADJ,QACiBD,EAAQ,I,OCEnCI,EAAO,SAAC,GAA4C,IAAD,EAAzCC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EAAaT,EAAQM,EAAME,IAAkBF,EAAK,GAExD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACC,GACT,IAAQR,EAAcQ,EAAdR,GAAIS,EAAUD,EAAVC,MAEZ,OACE,oBAEEH,UAAWI,IAAG,CAAE,YAAaL,EAAWL,KAAOA,IAC/C,UAAQ,MAHV,SAKE,mBACEW,QAAS,WACHX,IAAOI,GACTD,EAAcK,IAGlBI,KAAI,WAAMZ,GACV,UAAQ,UAPV,SASGS,KAbET,UAoBf,qBACEM,UAAU,QACV,UAAQ,aAFV,mBAIGV,EAAQM,EAAME,UAJjB,aAIG,EAA8BS,cChC1BX,EAAO,CAClB,CAAEF,GAAI,QAASS,MAAO,QAASI,QAAS,eACxC,CAAEb,GAAI,QAASS,MAAO,QAASI,QAAS,eACxC,CAAEb,GAAI,QAASS,MAAO,QAASI,QAAS,gBAGpCC,EAAeZ,EAAK,GAAGF,GAEhBe,EAAM,WACjB,MAA0CC,mBAASF,GAAnD,mBAAOV,EAAP,KAAsBa,EAAtB,KACMC,EAAYtB,EAAQM,EAAME,GAEhC,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,EAAUT,SAGhC,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAe,SAAAK,GAAG,OAAIS,EAAiBT,EAAIR,KAC3CI,cAAeA,QCzBvBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7278d868.chunk.js","sourcesContent":["export const findTab = (allTabs, selectId) => allTabs\n  .find(({ id }) => id === selectId) ?? allTabs[0];\n","import cn from 'classnames';\nimport { findTab } from '../../utils';\n\nexport const Tabs = ({ tabs, onTabSelected, selectedTabId }) => {\n  const currentTab = findTab(tabs, selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={cn({ 'is-active': currentTab.id === id })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => {\n                    if (id !== selectedTabId) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {findTab(tabs, selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { findTab } from './utils';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst initialTabId = tabs[0].id;\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(initialTabId);\n  const selectTab = findTab(tabs, selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={tab => setSelectedTabId(tab.id)}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}